{
  "name": "Swahili AI Business Assistant (Pro Version - Enhanced)",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "messages"
        ],
        "options": {}
      },
      "id": "eaafc3cb-e422-4bae-9469-af3c92b4179a",
      "name": "WhatsApp Trigger",
      "type": "n8n-nodes-base.whatsAppTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "webhookId": "dd40b205-8bf2-4904-b943-8e1f8a650a52",
      "credentials": {
        "whatsAppTriggerApi": {
          "id": "bPobvzQBFEQbUzoU",
          "name": "WhatsApp OAuth account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.contacts[0].wa_id }}",
        "contextWindowLength": 20
      },
      "id": "15b5c359-eede-4039-b266-9662764268f7",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        60,
        300
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "id": "6544c3f7-a938-42b5-868f-b17320307e3f",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -140,
        240
      ],
      "credentials": {
        "openAiApi": {
          "id": "FiVsG1qZWYwyUTua",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.messages[0].text.body }}",
        "options": {
          "systemMessage": "Wewe ni msaidizi wa duka la CICI Store. Utatumia tools zifuatazo kujibu maswali ya mteja. \n\n**Kipaumbele cha Kwanza: Kusimamia Token ya Uthibitisho**\n1.  **Check Token**: Daima, kama hatua ya kwanza kabisa ya swali lolote, tumia tool hii kuangalia kama `token` ipo kwenye mfumo na bado inafanya kazi. \n2.  **Login Request**: Ikiwa `Check Token` itaonyesha kuwa hakuna `token` au `token` iliyopo haifanyi kazi (mfano, umepata hitilafu ya 'Authorization Failed' kwenye jibu la `Check Token` au jibu lina 'error_code: 401'), basi fanya `Login Request` kwa kutumia `/api/login`. Tumia sifa za kuingia zilizopangwa (cici-store-chatbot@gmail.com na davyswai1995).\n3.  **Save Token**: Mara baada ya kufanya `Login Request` kwa mafanikio na kupokea `token` mpya, LAZIMA utumie tool ya `Save Token` kuihifadhi kwenye `workflow static data`. Hii ni muhimu ili token itumike kwa maombi yajayo bila kulogin tena.\n4.  Hakikisha una `token` halali kabla ya kuendelea na hatua nyingine.\n\n**Tools za Kupata Data (Tumia tu baada ya kuthibitisha token halali):**\n* **Get Products**: Kupata orodha ya bidhaa kupitia `/api/products`. \n* **Get Sales**: Kupata rekodi za mauzo kupitia `/api/sales`. \n* **Get Expenses**: Kupata rekodi za gharama kupitia `/api/expenses`. \n\n**Jinsi ya Kutuma Maombi ya Data (Kama una token halali):**\nKila tool ya 'Get' itatuma HTTP request kwenda `https://cici-store-production.up.railway.app{{$json.tool.url}}`. Unapotumia `Get Products`, `Get Sales`, au `Get Expenses`, LAZIMA utume `token` iliyohifadhiwa kama `Authorization: Bearer <token>` katika `headers` za request.\n\n**Jinsi ya Kujibu na Kushughulikia Makosa:**\n* Kama mteja anauliza kuhusu 'bidhaa', 'mauzo', au 'gharama', fuata hatua zote za usimamizi wa token kwanza, kisha tumia tool husika ya 'Get'.\n* Ikiwa tool ya 'Get' itarudisha ujumbe wa makosa (mfano, 'error: failed_to_get_products', 'error: failed_to_get_sales', 'error: failed_to_get_expenses'), jibu kwa kusema: \"Samahani, kuna tatizo la kiufundi kwenye kupata [jina la data, mfano bidhaa]. Tafadhali jaribu tena baadae.\" Kisha unaweza kupendekeza njia mbadala au kuomba ufafanuzi.\n* Jibu maswali ya mteja kwa kutumia taarifa uliyopata kutoka kwenye tools.\n* Kama hujaelewa vizuri swali la mteja, jibu kwa kusema: \"Ngoja nikuhakikishie kwanza.\"\n\n**Muhimu:** Daima hakikisha una token halali kabla ya kujaribu kupata data ya bidhaa, mauzo, au gharama."
        }
      },
      "id": "30150935-4e47-4b7d-a349-c71aae66496f",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        400,
        0
      ]
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "658079574061461",
        "recipientPhoneNumber": "={{$('WhatsApp Trigger').item.json.messages[0].from}}",
        "textBody": "={{$json.output}}",
        "additionalFields": {}
      },
      "id": "645c280a-7097-40e6-a648-4a939b29a8f9",
      "name": "Send WhatsApp",
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        940,
        0
      ],
      "webhookId": "9a46666a-db0c-430e-9ed6-051fccac392c",
      "credentials": {
        "whatsAppApi": {
          "id": "HxBc3sKEQOHKFXvO",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const token = $getWorkflowStaticData('global').token || null;\nreturn [{ json: { tokenPresent: !!token, token } }];\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        1000,
        320
      ],
      "id": "3717e2de-f41e-4988-aef7-a5dbb3edb821",
      "name": "Check Token"
    },
    {
      "parameters": {
        "jsCode": "const responseData = $json; // This is the output of the previous node (Login Request)\nlet token = null;\n\nif (responseData && typeof responseData === 'object') {\n    // Try common token fields directly at the root\n    if (responseData.token) {\n        token = responseData.token;\n    } else if (responseData.access_token) {\n        token = responseData.access_token;\n    } else if (responseData.data && typeof responseData.data === 'object' && responseData.data.token) {\n        // Try common token fields within a 'data' object\n        token = responseData.data.token;\n    } else if (responseData.data && typeof responseData.data === 'object' && responseData.data.access_token) {\n        token = responseData.data.access_token;\n    }\n}\n\nif (token) {\n    $getWorkflowStaticData('global').token = token;\n    return [{ json: { token: token, status: 'Token Saved' } }];\n} else {\n    // If no token found, return a status indicating failure\n    return [{ json: { token: null, status: 'Token Not Found in Login Response or Invalid' } }];\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        1160,
        200
      ],
      "id": "a29d433d-d708-4dcb-979b-9dcd487efe5c",
      "name": "Save Token"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://cici-store-production.up.railway.app/api/login",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "cici-store-chatbot@gmail.com"
            },
            {
              "name": "password",
              "value": "davyswai1995"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        240,
        360
      ],
      "id": "7f3728c6-f073-4ca8-954e-1058aedbeae8",
      "name": "Login Request"
    },
    {
      "parameters": {
        "url": "https://cici-store-production.up.railway.app/api/products",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $getWorkflowStaticData('global').token ? 'Bearer ' + $getWorkflowStaticData('global').token : '' }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        420,
        400
      ],
      "id": "a2ed92d6-09a2-4777-af72-2d2680135da8",
      "name": "Get Products"
    },
    {
      "parameters": {
        "url": "https://cici-store-production.up.railway.app/api/sales",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $getWorkflowStaticData('global').token ? 'Bearer ' + $getWorkflowStaticData('global').token : '' }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        600,
        420
      ],
      "id": "07c9201b-a6b5-4afd-9b45-fbb97c3f6183",
      "name": "Get Sales"
    },
    {
      "parameters": {
        "url": "https://cici-store-production.up.railway.app/api/expenses",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $getWorkflowStaticData('global').token ? 'Bearer ' + $getWorkflowStaticData('global').token : '' }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        820,
        380
      ],
      "id": "55ce5709-d768-4944-b822-38be44502167",
      "name": "Get Expenses"
    },
    {
      "parameters": {
        "jsCode": "const response = $json;\n\nif (response.statusCode && response.statusCode >= 400) {\n  return [{ json: { error: `failed_to_get_products`, details: response } }];\n} else {\n  return [{ json: { products_data: response } }];\n}"
      },
      "name": "Handle Products Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        500,
        550
      ],
      "id": "handle_products_response"
    },
    {
      "parameters": {
        "jsCode": "const response = $json;\n\nif (response.statusCode && response.statusCode >= 400) {\n  return [{ json: { error: `failed_to_get_sales`, details: response } }];\n} else {\n  return [{ json: { sales_data: response } }];\n}"
      },
      "name": "Handle Sales Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        680,
        570
      ],
      "id": "handle_sales_response"
    },
    {
      "parameters": {
        "jsCode": "const response = $json;\n\nif (response.statusCode && response.statusCode >= 400) {\n  return [{ json: { error: `failed_to_get_expenses`, details: response } }];\n} else {\n  return [{ json: { expenses_data: response } }];\n}"
      },
      "name": "Handle Expenses Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        900,
        530
      ],
      "id": "handle_expenses_response"
    },
    {
      "parameters": {
        "sheetId": "YOUR_GOOGLE_SHEET_ID",
        "range": "Sheet1!A:E",
        "valueInputMode": "USER_ENTERED",
        "options": {},
        "values": [
          "={{$now}}",
          "={{$('WhatsApp Trigger').item.json.messages[0].from}}",
          "={{$json.messages ? $json.messages[0].text.body : ($('AI Agent').item.json.prompt || '')}}",
          "={{$('Send WhatsApp').item.json.textBody || $json.output || $json['textBody'] || $json['status'] || ''}}",
          "={{($json.error) ? JSON.stringify($json.details || $json.error) : ''}}"
        ]
      },
      "name": "Log to Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 2,
      "position": [
        1200,
        0
      ],
      "id": "log_google_sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "YOUR_GOOGLE_SHEETS_CRED_ID",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log to Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send WhatsApp",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log to Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Token": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Save Token": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Login Request": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Products": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ],
      "main": [
        [
          {
            "node": "Handle Products Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Sales": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ],
      "main": [
        [
          {
            "node": "Handle Sales Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Expenses": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ],
      "main": [
        [
          {
            "node": "Handle Expenses Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send WhatsApp": {
      "main": [
        [
          {
            "node": "Log to Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Handle Products Response": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool_return",
            "index": 0
          }
        ]
      ]
    },
    "Handle Sales Response": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool_return",
            "index": 0
          }
        ]
      ]
    },
    "Handle Expenses Response": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool_return",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d953edb6-e181-4f4f-a30a-bf4ae11af52a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "83f7b73ec5f954092e6813aeb662ccdca766057dde8cf1a8c372706a0bbacc0f"
  },
  "id": "WqyShBgAHWocmL9e",
  "tags": []
}